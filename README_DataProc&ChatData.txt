 * 클래스 사용에 앞서 언어(한글) 설정을 utf-8로 변경하는 것을 권장함


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

# ChatData class
=============================================================================
 * 채팅에 대한 정보를 담고 있는 자료구조.
 * private String userID;
 * private String userNickName;
 * private String chatText;
 * private boolean isBadword;
 * private boolean isNamed;
 * private boolean havetoDisplay_Named; // 새롭게 인식된 네임드이면 true;

=============================================================================

# Constructors
-------------------------------------------------------------------------------------------------------------------------
public ChatData(String userID, String userNickName, String chatText)
  채팅 데이터를 파싱하여 위 형식대로 생성자를 이용해 객체를 생성해주세요

=============================================================================

# Methods
-------------------------------------------------------------------------------------------------------------------------
  단순 자료구조이기때문에 게터와 세터 메소드로만 구성


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


# ChatProc class
=============================================================================
 * private DataTable tb;
 * private ChatData ds;  //처리할 DataTable을 임시로 저장하여 사용하기 위함

=============================================================================

# Constructors
-------------------------------------------------------------------------------------------------------------------------
public ChatProc()
  DataTable 객체를 생성한다.

=============================================================================

# Methods
-------------------------------------------------------------------------------------------------------------------------
private void checkUser()
  NamedList에 존재하는 id일 경우 ds의 IsNamed를 true
  NamedList에 존재하지만, myList에 존재하지 않는 경우 ds의 haveToDisplay_Named를 true
  (즉, 처음 입장한 네임드의 경우에만 haveToDisPlay_Named ==true)
-------------------------------------------------------------------------------------------------------------------------	
public boolean checkUser(String userID)
  위와 같은 기능을 수행하되, ChatData 객체 없이 동작할 수 있는 메소드
  userID가 처음 입장한 네임드의 경우에만 true를 return
-------------------------------------------------------------------------------------------------------------------------
private void checkBadword()
  1. 입력받은 ChatData 객체를 조사하여 BWTable과 대조, 욕설인지 확인
  2. 채팅에 URL이 포함되어 욕설로 판별되었을 경우, checkSafetyURL을 호출
  -> 욕설인경우 ChatData객체의 isBadword가 true가 되도록 함
-------------------------------------------------------------------------------------------------------------------------
private boolean checkSafetyURL(int n)
  checkBadword의 서브 메소드로서 매개변수 n은 n번째 글자에서 욕설임이 디텍팅 되었다는것을 의미
  사용자 채팅의 n번째 글자부터 safeURLList의 원소들과 대조
  -> 안전한 URL인 경우 true, 아닌 경우 false를 return;
-------------------------------------------------------------------------------------------------------------------------
private boolean checkSpamImoji()
  입력받은 채팅이 이모티콘으로 도배되어있는지 확인하여 spam으로 판단되면 true return

-------------------------------------------------------------------------------------------------------------------------
public void doProc(ChatData inputds)
  ChatData객체를 받아 처리하게 된다.
  1. ChatData의 userID가 네임드인지 checkUser() 메소드 호출
  2. ChatData의 chatText가 이모티콘 도배인지 확인하기 위하여 checkSpamImoji() 메소드 호출
  3. 위에서 스팸 메시지가 아니라고 판단하면 chatText가 욕설인지 checkBadword() 메소드 호출
  -> input으로 받은 ChatData 객체의 내용을 변경시키게 됨
-------------------------------------------------------------------------------------------------------------------------

=============================================================================

# Use Cases
-------------------------------------------------------------------------------------------------------------------------
   // chatting내용 처리의 경우
	ChatProc proc = new ChatProc();
	ChatData cd;
	proc.doProc(cd);	//cd의 정보가 바뀌게 됨
	if( cd.getHavetoDisplay_Named() ) { "...님 반갑습니다" 메시지 출력 }  //새로 방문한 네임드인 경우
	if( cd.getIsBadword() ) { ... }  //채팅 내용이 욕설인 경우
-------------------------------------------------------------------------------------------------------------------------
   // user 방문 이벤트 처리의 경우
	ChatProc proc = new ChatProc();  //ChatProc객체는 한 개만 있으면 됩니다. 위에서 생성했을경우 필요x
	if ( proc.checkUser( "sjw511" ) ) { "...님 반갑습니다" 메시지 출력 } //새로 방문한 네임드인 경우
-------------------------------------------------------------------------------------------------------------------------
  // 기타 메소드들
	proc.getDataTable().getNamedList()	: ArrayList<String>, 네임드로 판별할 ID의 목록
	proc.getDataTable().getBWTable()	: ArrayList<String>[ ], 현재 적용되고 있는 
	proc.getDataTable().getMyList()	: ArrayList<String>, 내 방에 있는 네임드 목록

	#ReadMe_DataTable 파일을 참조해주세요
		